# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-10-08 10:33
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import encrypted_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SanjiaoPolicy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exchange', models.CharField(choices=[('binance', '币安Binance'), ('huobipro', '火币Huobi'), ('hadax', '火币HADAX'), ('okex', 'OKEX'), ('bitmex', 'BitMEX'), ('bitfinex', 'Bitfinex'), ('bitflyer', 'bitFlyer'), ('bittrex', 'Bittrex'), ('bithumb', 'Bithumb'), ('bitmarket', 'bitmarket'), ('bitstamp', 'Bitstamp'), ('bitz', 'Bit-Z'), ('bitlish', 'Bitlish'), ('bitsane', 'Bitsane'), ('bitso', 'Bitso'), ('coinbase', 'coinbase'), ('coinex', 'coinex'), ('coinexchange', 'coinexchange'), ('coinnest', 'coinnest'), ('coinone', 'CoinOne'), ('cointiger', 'CoinTiger'), ('deribit', 'Deribit'), ('gateio', 'Gate.io'), ('gdax', 'GDAX'), ('hitbtc2', 'HitBTC'), ('fcoin', 'FCoin'), ('bcex', 'BCEX'), ('bibox', 'Bibox'), ('bigone', 'BigONE'), ('bitbank', 'bitbank'), ('bitbay', 'BitBay'), ('kraken', 'Kraken'), ('kucoin', 'Kucoin'), ('lbank', 'LBank'), ('poloniex', 'Poloniex'), ('qryptos', 'QRYPTOS'), ('quoinex', 'QUOINEX'), ('tidebit', 'TideBit'), ('uex', 'UEX'), ('vbtc', 'VTBC'), ('wex', 'WEX'), ('zb', 'ZB'), ('yobit', 'YoBit'), ('zaif', 'Zaif')], help_text='请选择一个交易所', max_length=20, verbose_name='交易所')),
                ('accesskey', models.CharField(help_text='请填写您在交易所的api access key', max_length=100, verbose_name='Accesskey')),
                ('secretkey', encrypted_fields.fields.EncryptedTextField(help_text='请填写您在交易所的api secret key', verbose_name='SecretKey')),
                ('symbol', models.CharField(default='', help_text='请填写该交易所的交易对例如BTC/USDT', max_length=20, verbose_name='交易对')),
                ('max_buy_price', models.FloatField(default=0, help_text='请填写该交易对的最高买入价格', verbose_name='最高买入价格')),
                ('min_sell_price', models.FloatField(default=0, help_text='请填写该交易对的最低卖出价格', verbose_name='最低卖出价格')),
                ('start_time', models.DateTimeField(help_text='请填写您的交易策略运行开始时间', verbose_name='开始运行时间')),
                ('end_time', models.DateTimeField(help_text='请填写您的交易策略结束运行时间', verbose_name='结束运行时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='记录更新时间')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='记录创建时间')),
                ('status', models.CharField(blank=True, choices=[('unstart', '未开始'), ('run', '运行中'), ('stop', '已停止')], default='unstart', help_text='策略运行状态', max_length=10, verbose_name='运行状态')),
                ('operation', models.IntegerField(blank=True, choices=[(0, '开启运行'), (1, '停止运行')], default=0, help_text='操作', verbose_name='操作')),
                ('symbol_1', models.CharField(default='', help_text='请填写该交易所的交易对例如BTC/USDT', max_length=20, verbose_name='交易对1')),
                ('symbol_2', models.CharField(default='', help_text='请填写该交易所的交易对例如BTC/USDT', max_length=20, verbose_name='交易对2')),
                ('base_volume', models.FloatField(default=0, help_text='请填写需要赚的币的数量', verbose_name='base货币数量')),
                ('min_percent', models.FloatField(default=0, help_text='请填写最小套利百分比', verbose_name='最小收益百分比')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '三角策略',
                'db_table': 'sanjiao',
                'abstract': False,
                'managed': True,
                'default_permissions': ('add', 'change', 'delete', 'view'),
            },
        ),
    ]
